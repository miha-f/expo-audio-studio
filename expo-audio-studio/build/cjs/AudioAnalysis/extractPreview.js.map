{"version":3,"file":"extractPreview.js","sourceRoot":"","sources":["../../../src/AudioAnalysis/extractPreview.ts"],"names":[],"mappings":";;AAUA,wCAuBC;AAhCD,iEAA6D;AAE7D;;;;;;GAMG;AACI,KAAK,UAAU,cAAc,CAAC,EACjC,OAAO,EACP,cAAc,GAAG,GAAG,EACpB,WAAW,GAAG,CAAC,EACf,SAAS,GAAG,KAAK,EAAE,mBAAmB;AACtC,eAAe,EACf,MAAM,GACO;IACb,MAAM,UAAU,GAAG,SAAS,GAAG,WAAW,CAAA;IAC1C,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,cAAc,CAAC,CAAA;IAEjE,uDAAuD;IACvD,MAAM,QAAQ,GAAG,MAAM,IAAA,2CAAoB,EAAC;QACxC,OAAO;QACP,WAAW;QACX,SAAS;QACT,MAAM;QACN,iBAAiB;QACjB,eAAe;KAClB,CAAC,CAAA;IAEF,gDAAgD;IAChD,OAAO,QAAQ,CAAA;AACnB,CAAC","sourcesContent":["import { PreviewOptions, AudioAnalysis } from './AudioAnalysis.types'\nimport { extractAudioAnalysis } from './extractAudioAnalysis'\n\n/**\n * Generates a simplified preview of the audio waveform for quick visualization.\n * Ideal for UI rendering with a specified number of points.\n *\n * @param options - The options for the preview, including file URI and time range.\n * @returns A promise that resolves to the audio preview data.\n */\nexport async function extractPreview({\n    fileUri,\n    numberOfPoints = 100,\n    startTimeMs = 0,\n    endTimeMs = 30000, // First 30 seconds\n    decodingOptions,\n    logger,\n}: PreviewOptions): Promise<AudioAnalysis> {\n    const durationMs = endTimeMs - startTimeMs\n    const segmentDurationMs = Math.floor(durationMs / numberOfPoints)\n\n    // Call extractAudioAnalysis with calculated parameters\n    const analysis = await extractAudioAnalysis({\n        fileUri,\n        startTimeMs,\n        endTimeMs,\n        logger,\n        segmentDurationMs,\n        decodingOptions,\n    })\n\n    // Transform the result into AudioPreview format\n    return analysis\n}\n"]}