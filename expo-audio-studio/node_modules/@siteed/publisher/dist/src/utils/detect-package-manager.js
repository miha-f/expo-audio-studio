"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectPackageManager = detectPackageManager;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
function detectPackageManager(rootDir) {
    let currentDir = path_1.default.resolve(rootDir);
    const root = path_1.default.parse(currentDir).root;
    while (currentDir !== root) {
        try {
            const yarnLockPath = path_1.default.join(currentDir, "yarn.lock");
            const packageLockPath = path_1.default.join(currentDir, "package-lock.json");
            // Check lock files synchronously
            if (fs_1.default.existsSync(yarnLockPath))
                return "yarn";
            if (fs_1.default.existsSync(packageLockPath))
                return "npm";
            // Move up one directory
            const parentDir = path_1.default.dirname(currentDir);
            if (parentDir === currentDir) {
                break; // Prevent infinite loop if we can't go up anymore
            }
            currentDir = parentDir;
        }
        catch (error) {
            console.error(`Error checking lock files in ${currentDir}:`, error);
            break;
        }
    }
    // Default to yarn if no lock file is found
    return "yarn";
}
