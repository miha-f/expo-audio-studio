"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findMonorepoRootSync = findMonorepoRootSync;
const fs_1 = __importDefault(require("fs"));
const node_path_1 = __importDefault(require("node:path"));
function findMonorepoRootSync(startDir) {
    let currentDir = startDir;
    while (currentDir !== node_path_1.default.parse(currentDir).root) {
        const pkgJsonPath = node_path_1.default.join(currentDir, "package.json");
        try {
            if (fs_1.default.existsSync(pkgJsonPath)) {
                const content = fs_1.default.readFileSync(pkgJsonPath, "utf-8");
                const pkgJson = JSON.parse(content);
                if (pkgJson.workspaces) {
                    return currentDir;
                }
            }
        }
        catch (error) {
            // eslint-disable-next-line no-console
            console.debug(`Error accessing ${pkgJsonPath}:`, error);
        }
        currentDir = node_path_1.default.dirname(currentDir);
    }
    return startDir; // fallback to start directory if no root found
}
