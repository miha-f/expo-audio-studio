import type { PackageManager, ReleaseConfig, PackageJson, PackageConfig } from "../types/config";
export interface GeneratePackageConfigOptions {
    packageJson: PackageJson;
    packageManager: PackageManager;
    changelogFile?: string;
    conventionalCommits?: boolean;
    changelogFormat?: "conventional" | "keep-a-changelog";
    versionStrategy?: ReleaseConfig["versionStrategy"];
    bumpStrategy?: ReleaseConfig["bumpStrategy"];
    bumpType?: ReleaseConfig["bumpType"];
    preReleaseId?: string;
    npm?: {
        publish: boolean;
        access: "public" | "restricted";
    };
}
export declare function generateDefaultConfig(options: GeneratePackageConfigOptions): PackageConfig;
export interface GenerateFileFormat {
    format: "json" | "typescript";
}
export interface GeneratePackageConfigParams {
    options: GeneratePackageConfigOptions;
    format?: GenerateFileFormat["format"];
}
export declare function generatePackageConfig({ options, format, }: GeneratePackageConfigParams): string;
export declare const packageConfigTemplate: string;
